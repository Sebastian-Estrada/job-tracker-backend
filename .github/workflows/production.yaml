name: Backend Deployment

on:
  push:
    branches:
      - prod

env:
  AWS_REGION: "ca-central-1"  # Your AWS region
  ECR_REPOSITORY: "backend"  # Your ECR repository name
  CLUSTER_NAME: "production-eks-cluster"  # Your EKS cluster name
  NAMESPACE: "default"  # Kubernetes namespace

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest"
          docker build -t $IMAGE_URI -f Docker/Dockerfile .
          docker push $IMAGE_URI

      - name: Update Kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Set Environment Variables in Kubernetes
        run: |
          kubectl set env deployment/backend \
            DEBUG=${{ vars.DEBUG }} \
            SECRET_KEY=${{ secrets.SECRET_KEY }} \
            DB_NAME=${{ vars.DB_NAME }} \
            DB_USER=${{ vars.DB_USER }} \
            DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            DB_HOST=${{ secrets.DB_HOST }} \
            DB_PORT=${{ vars.DB_PORT }} \
            ALLOWED_HOSTS=${{ vars.ALLOWED_HOSTS }} \
            CORS_ALLOWED_ORIGINS=${{ vars.CORS_ALLOWED_ORIGINS }} -n $NAMESPACE

          kubectl rollout restart deployment/backend -n $NAMESPACE

          kubectl rollout status deployment/backend -n $NAMESPACE
